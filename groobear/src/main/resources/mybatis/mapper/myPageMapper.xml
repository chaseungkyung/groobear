<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.app.mapper.MyPageMapper">
	<select id="workList" parameterType="map" resultType="com.sp.app.model.MyPage">
		SELECT workIdx, e.empIdx, e.empName, workDate, TO_CHAR(loginTime, 'HH24:MI:SS') loginTime
		FROM workLog w
		JOIN employee e ON e.empIdx = w.empIdx
		WHERE e.empIdx = #{empIdx}
	</select> 
	
	<select id="getEmpInfo" parameterType="long">
	    SELECT e.empIdx, e.empPwd, e.empName, e.deptIdx, e.teamIdx, e.positionCode, e.empTel, e.hireDate, e.retireDate, 
	           d.email, d.tel, d.zipCode, d.addrMain, d.addrSub, d.rrn, h.deptName, h.teamName, h.startDate
	    FROM employee e
	    JOIN employeeDetail d ON e.empIdx = d.empIdx
	    JOIN (
	        SELECT h.empIdx, h.deptName, h.teamName, h.startDate
	        FROM (
	            SELECT h.*, ROW_NUMBER() OVER (PARTITION BY empIdx ORDER BY startDate DESC) AS rn
	            FROM employeeHistory h
	        ) h
	        WHERE h.rn = 1 
	    ) h ON e.empIdx = h.empIdx
	    WHERE e.empIdx = #{empIdx}
	</select>
 
	<update id="updateEmpInfo" parameterType="map">
    	UPDATE employee e
	    JOIN employeeDetail ed ON e.empIdx = ed.empIdx
	    SET e.empCode = #{empCode}, e.empPwd = #{empPwd}, e.empName = #{empName}, e.deptIdx = #{deptIdx}, e.teamIdx = #{teamIdx}, e.positionCode = #{positionCode},
	        e.empTel = #{empTel}, e.hireDate = #{hireDate}, e.retireDate = #{retireDate},
	        ed.tel = #{tel}, ed.email = #{email}, ed.addrMain = #{addrMain}, ed.addrSub = #{addrSub}, ed.rrn = #{rrn}
	    WHERE e.empIdx = #{empIdx};
	</update>
	
	<select id="getEmpRecord" parameterType ="long" resultType="com.sp.app.model.EmpRecord">
		SELECT historyIdx, empIdx, deptName, teamName, empRank, TO_CHAR(startDate,'YYYY-MM-DD') AS startDate, TO_CHAR(endDate,'YYYY-MM-DD') AS endDate, note
		FROM employeeHistory
		WHERE empIdx = #{empIdx}
	</select>
	
	<update id ="updateEmpRecord" parameterType="map">
		UPDATE historyIdx = #{historyIdx}, empIdx = #{empIdx}, startDate = #{startDate}, endDate = #{endDate}, deptName = #{deptName}, teamName = #{teamName}, empRank = #{empRank}, note = #{note}
		SET employeeHistory
		WHERE empIdx = #{empIdx}
	</update>

	
	<select id="timeKeeping" parameterType="map" resultType="com.sp.app.model.MyPage">
        SELECT w.workIdx, d.aprIdx, e.empName, d.deptName, d.teamName, e.positionCode, d.status, o.otReqIdx, TO_CHAR(o.overDate,'YYYY-MM-DD')overDate, o.overTime, o.workDetail
		FROM employee e
		LEFT OUTER JOIN workLog w ON e.empIdx = w.empIdx
		LEFT OUTER JOIN docApproval d ON d.empIdx = e.empIdx
		LEFT OUTER JOIN overtimeRequest o ON o.aprIdx = d.aprIdx
		WHERE d.status = 1 
	</select>

	<select id="paidOffTime" parameterType="map" resultType="com.sp.app.model.MyPage">
		SELECT e.empIdx, e.deptIdx, e.empName, e.teamIdx, e.positionCode, d.status, d.aprIdx, l.leaveType, TO_CHAR(l.startDate,'YYYY-MM-DD')startDate, TO_CHAR(l.endDate, 'YYYY-MM-DD') endDate, l.leaveDays, l.leaveReason, l.remarks
		FROM employee e
		LEFT OUTER JOIN docApproval d ON d.empIdx = e.empIdx
		LEFT OUTER JOIN leaveRequest l ON l.aprIdx = d.aprIdx
		WHERE d.status = 1 
	</select>
	
	<select id="getLoginTime" parameterType="long" resultType="com.sp.app.model.MyPage">
		SELECT workIdx, empIdx, workDate, loginTime
		FROM worklog
		WHERE TRUNC(loginTime) = TRUNC(SYSDATE) AND empIdx = #{empIdx}
	</select>
	
	
</mapper>