<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.app.mapper.MemberMapper">

	<select id="loginMember" parameterType="String" resultType="com.sp.app.model.Member">
		SELECT empIdx, empCode, empName, empPwd, deptIdx, teamIdx, empRank, hireDate, retireDate, lastLogin, loginFails, empStatus
		FROM Employee
		WHERE empCode = #{empCode}
	</select>

	<insert id="insertEmployee" parameterType="com.sp.app.model.Member">
		INSERT INTO Employee(empIdx, empCode, empName, empPwd, deptIdx, teamIdx, empRank, empTel, hireDate, retireDate, lastLogin, loginFails, empStatus)
		VALUES (employee_seq.NEXTVAL, #{empCode}, #{empName}, #{empPwd}, #{deptIdx}, #{teamIdx}, #{empRank}, #{empTel}, #{hireDate}, #{retireDate}, #{lastLogin}, #{loginFails}, #{empStatus})
	</insert>
	
	<insert id="insertEmployeeDetail" parameterType="com.sp.app.model.Member">
		INSERT INTO EmployeeDetail(empIdx, birth, email, tel, zipCode, addrMain, addrSub)
		VALUES (#{empIdx}, #{birth}, #{email}, #{tel}, #{zipCode}, #{addrMain}, #{addrSub})
	</insert>

	<insert id="insertEmployeeHistory" parameterType="com.sp.app.model.Member">
	
	</insert>
	<!--  
	<update id="updateLastLogin" parameterType="com.sp.app.model.Member">
	 	UPDATE EmployeeDetail SET lastLogin= #{lastLogin}
		WHERE deptIdx = #{deptIdx}
	</update>
	
	<update id="updateMemberStatus" parameterType="map">
	 	UPDATE EmployeeDetail SET empStatus= #{empStatus}
		WHERE deptIdx = #{deptIdx}
	</update>

	<update id="updateEmployee" parameterType="com.sp.app.model.Member">
		UPDATE Employee SET deptIdx = #{deptIdx}, teamIdx= #{teamIdx}, empRank= #{empRank}, empTel= #{empTel}
		WHERE deptIdx = #{deptIdx}
	</update>
	
	<update id="updateEmployeeDetail" parameterType="com.sp.app.model.Member">
	 	UPDATE EmployeeDetail SET tel= #{tel}, email= #{email}
		WHERE deptIdx = #{deptIdx}
	</update>
	 
	<update id="updateEmployeeHistory" parameterType="com.sp.app.model.Member">
	
	</update>
	
	<select id="checkFailureCount" parameterType="">
	
	</select>
	
	<update id="updateFailureCountReset" parameterType="com.sp.app.model.Member">
	
	</update>

	<update id="updateFailureCount" parameterType="com.sp.app.model.Member">
	
	</update>
	
	<select id="findByEmpIdx" parameterType="">
	
	</select>
	
	<select id="listFindMember" parameterType="map">
	
	</select>
	-->
	
	<select id="listMemberAll" parameterType="com.sp.app.model.Member">
		SELECT empIdx, empCode, empName, deptIdx, teamIdx, empRank, empTel 
		FROM employee
	</select>
	
	<select id="listMember" parameterType="map" resultType="com.sp.app.model.Member">
		SELECT e.empIdx, e.empCode, e.empName, e.deptIdx, e.teamIdx, e.empRank, TO_CHAR(e.hiredate, 'YYYY-MM-DD') hiredate , d.tel, d.email, e.empTel 
		FROM employee e
		JOIN employeedetail d ON e.empIdx = d.empIdx
		ORDER BY empCode DESC
	</select>
	
	<select id="dataConut" parameterType="map" resultType="com.sp.app.model.Member">
		SELECT NVL(COUNT(e.empIdx), 0) dataCount
		FROM employee e
		JOIN employeedetail d ON e.empIdx = d.empIdx
	</select>
	
	
<!-- 
	<delete id="" parameterType="com.sp.app.model.Member">
		
	</delete>
 -->
</mapper>