<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sp.app.mapper.ScheduleMapper">
	<insert id="insertSchedule" parameterType="com.sp.app.model.Schedule">
		INSERT INTO schedule(scheduleIdx, empCode, deptCode, title, categoryIdx, color, startDate, endDate, positionCode,
			startTime, endTime, repeat, repeat_cycle, memo, reg_date) 
		VALUES(schedule_seq.NEXTVAL, #{empCode}, #{deptCode, jdbcType=VARCHAR}, #{title, jdbcType=VARCHAR},
			#{categoryIdx, jdbcType=INTEGER}, 
			#{color}, #{startDate},
			#{endDate, jdbcType=VARCHAR},
			#{positionCode},
			#{startTime, jdbcType=VARCHAR},
			#{endTime, jdbcType=VARCHAR},
			#{repeat}, #{repeat_cycle},
			#{memo, jdbcType=VARCHAR},
			SYSDATE
		)
	</insert>

	<select id="listMonth" parameterType="map" resultType="com.sp.app.model.Schedule">
		SELECT scheduleIdx, title, startDate, endDate, startTime, endTime, deptCode, empCode, positionCode,
				categoryIdx, color, repeat, repeat_cycle, memo, reg_date
		FROM schedule
		<where>
			<trim prefixOverrides="AND">
				<if test="categoryIdx == 1">
					empCode = #{empCode} AND categoryIdx = 1
				</if>
				<if test="categoryIdx == 2">
					deptCode = #{deptCode, jdbcType=VARCHAR} AND categoryIdx = 2
				</if>
				<if test="categoryIdx == 3">
					categoryIdx = 3
				</if>
				AND
				( 
					( 
						 ( TO_DATE(startDate, 'YYYY-MM-DD') &gt;= TO_DATE(#{start}, 'YYYY-MM-DD')
							AND TO_DATE(startDate, 'YYYY-MM-DD') &lt;= TO_DATE(#{end}, 'YYYY-MM-DD')
						 ) OR ( TO_DATE(endDate, 'YYYY-MM-DD') &lt;= TO_DATE(#{start}, 'YYYY-MM-DD') 
						    AND TO_DATE(endDate, 'YYYY-MM-DD') &lt;= TO_DATE(#{end}, 'YYYY-MM-DD')
						 )
					) OR (
						repeat = 1 AND repeat_cycle != 0 
						   AND ADD_MONTHS(TO_DATE(startDate, 'YYYY-MM-DD'), 12 * repeat_cycle * TRUNC(((SUBSTR(#{repeatStart},1,4) - SUBSTR(startDate,1,4)) / repeat_cycle))) &gt;= TO_DATE(#{repeatStart}, 'YYYY-MM-DD')
						   AND ADD_MONTHS(TO_DATE(startDate, 'YYYY-MM-DD'), 12 * repeat_cycle * TRUNC(((SUBSTR(#{repeatStart},1,4) - SUBSTR(startDate,1,4)) / repeat_cycle))) &lt;= TO_DATE(#{repeatEnd}, 'YYYY-MM-DD') 
				    )
				)
			</trim>
		</where>
		ORDER BY startDate ASC, scheduleIdx DESC 
	</select>

	<select id="findById" parameterType="Long" resultType="com.sp.app.model.Schedule">
		SELECT scheduleIdx, title, startDate, endDate, startTime, endTime, categoryIdx, deptCode, empCode,positionCode,
			color, repeat, repeat_cycle, memo, reg_date 
		FROM schedule 
		WHERE scheduleIdx = #{scheduleIdx}
	</select>
	
	<update id="updateSchedule" parameterType="com.sp.app.model.Schedule">
		UPDATE schedule SET
			title = #{title},
			categoryIdx = #{categoryIdx, jdbcType=INTEGER}, 
			color = #{color}, startDate = #{startDate}, 
			endDate = #{endDate, jdbcType=VARCHAR},
			startTime = #{startTime, jdbcType=VARCHAR},
			endTime = #{endTime, jdbcType=VARCHAR},
			repeat = #{repeat},
			repeat_cycle = #{repeat_cycle},
			deptCode = #{deptCode, jdbcType=VARCHAR},
			positionCode = #{positionCode},
			memo = #{memo, jdbcType=VARCHAR}
		WHERE scheduleIdx = #{scheduleIdx, jdbcType=INTEGER} AND empCode = #{empCode, jdbcType=VARCHAR}
	</update>
	
	<delete id="deleteSchedule" parameterType="map">
		DELETE FROM schedule
		WHERE scheduleIdx = #{scheduleIdx, jdbcType=INTEGER} AND empCode = #{empCode, jdbcType=VARCHAR}
	</delete>
	
	<select id="todaySchedule" resultType="com.sp.app.model.Schedule">
		SELECT scheduleIdx, title, startDate, endDate, startTime, endTime, categoryIdx, deptCode, empCode,positionCode,
			color, repeat, repeat_cycle, memo, reg_date 
		FROM schedule 
		WHERE startDate = TO_CHAR(SYSDATE, 'YYYY-MM-DD') 
	</select>	

</mapper>